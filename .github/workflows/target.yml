name: Check PR Template

on:
  pull_request_target:
    types: [opened, synchronize, reopened, edited]

env:
  AGILE_PULL_ID: ${{ github.event.pull_request.number }}
  GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Clone paddle
      uses: actions/checkout@v4
      with:
        ref: refs/pull/${{ github.event.pull_request.number }}/merge

    - name: Install dependencies
      run: |
        pip install httpx
        ls -al

    - name: Check PR Template
      run: |
        echo ${{ github.event.pull_request.head.ref }}
        echo ${{ github.ref }}
        echo ${{ github.head_ref }}
        echo ${{ github.base_ref }}
        echo ${{ github.event.pull_request.base.ref }}
        echo ${{ github.event.pull_request.head.sha }}
        echo ${{ github.event.pull_request.user.login }}

    - name: Get commit information
      run: |
        # 获取最近一次提交的信息
        # COMMIT_HASH=$(git log -1 --pretty=format:"%H")
        # AUTHOR_NAME=$(git log -1 --pretty=format:"%an")
        # COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")
        COMMIT_HASH=$(git log -2 --pretty=format:"%H" | tail -n 1)
        AUTHOR_NAME=$(git log -2 --pretty=format:"%an" | tail -n 1)
        COMMIT_MESSAGE=$(git log -2 --pretty=format:"%s" | tail -n 1)

        # 生成 JSON 结构
        COMMIT_JSON="[{\"Commit\":\"$COMMIT_HASH\",\"author\":\"$AUTHOR_NAME\",\"comment\":\"$COMMIT_MESSAGE\"}]"
        echo "COMMIT_JSON=$COMMIT_JSON" >> $GITHUB_ENV

    - name: Output commit JSON
      run: |
        echo "Commit JSON: $COMMIT_JSON"
        
