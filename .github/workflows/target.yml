name: Check PR Template

on:
  pull_request_target:
    types: [opened, synchronize, reopened, edited]

env:
  AGILE_PULL_ID: ${{ github.event.pull_request.number }}
  GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Clone paddle
      uses: actions/checkout@v4
      with:
        ref: refs/pull/${{ github.event.pull_request.number }}/merge
        fetch-depth: 1000

    - name: Install dependencies
      run: |
        pip install httpx
        ls -al

    - name: Check PR Template
      run: |
        echo ${{ github.event.pull_request.head.ref }}
        echo ${{ github.ref }}
        echo ${{ github.head_ref }}
        echo ${{ github.base_ref }}
        echo ${{ github.event.pull_request.base.ref }}
        echo ${{ github.event.pull_request.head.sha }}
        echo ${{ github.event.pull_request.user.login }}

    - name: Get commit information
      env:
        AGILE_CHECKIN_AUTHOR: ${{ github.event.pull_request.user.login }}
        AGILE_REVISION: ${{ github.event.pull_request.head.sha }}
      run: |
        COMMIT_MESSAGE=$(git show -s --format='%s' $AGILE_REVISION)
        # 生成 JSON 结构
        COMMIT_JSON="[{\"Commit\":\"$AGILE_REVISION\",\"author\":\"$AGILE_CHECKIN_AUTHOR\",\"comment\":\"$COMMIT_MESSAGE\"}]"
        echo "COMMIT_JSON=$COMMIT_JSON" >> $GITHUB_ENV

    - name: Output commit JSON
      run: |
        echo "Commit JSON: $COMMIT_JSON"
        
